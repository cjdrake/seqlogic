"""Sequential Logic."""

from .bits import (
    AddResult,
    Array,
    Bits,
    Empty,
    Enum,
    Scalar,
    ShiftResult,
    Struct,
    Union,
    Vector,
    adc,
    add,
    and_,
    bits,
    cat,
    eq,
    ge,
    gt,
    i2bv,
    le,
    lrot,
    lsh,
    lt,
    nand,
    ne,
    neg,
    ngc,
    nor,
    not_,
    or_,
    rep,
    rrot,
    rsh,
    sbc,
    sge,
    sgt,
    sle,
    slt,
    srsh,
    stack,
    sub,
    sxt,
    u2bv,
    uand,
    uor,
    uxnor,
    uxor,
    xnor,
    xor,
    xt,
)
from .design import Module, Packed, Unpacked
from .expr import Op
from .sim import Region, Sim, changed, get_loop, resume, sleep
from .util import clog2

# Alias Vector to Vec for brevity
Vec = Vector

__all__ = [
    # bits
    "AddResult",
    "ShiftResult",
    "Bits",
    "Empty",
    "Scalar",
    "Vector",
    "Vec",
    "Array",
    "Enum",
    "Struct",
    "Union",
    # bits: bitwise
    "not_",
    "nor",
    "or_",
    "nand",
    "and_",
    "xnor",
    "xor",
    # bits: unary
    "uor",
    "uand",
    "uxnor",
    "uxor",
    # bits: arithmetic
    "add",
    "adc",
    "sub",
    "sbc",
    "neg",
    "ngc",
    "lsh",
    "rsh",
    "srsh",
    # bits: word
    "xt",
    "sxt",
    "lrot",
    "rrot",
    "cat",
    "rep",
    # bits: predicate
    "lt",
    "le",
    "eq",
    "ne",
    "gt",
    "ge",
    "slt",
    "sle",
    "sgt",
    "sge",
    # bits: factory
    "bits",
    "stack",
    "u2bv",
    "i2bv",
    # design
    "Module",
    "Packed",
    "Unpacked",
    # expr
    "Op",
    # sim
    "Region",
    "Sim",
    "get_loop",
    "sleep",
    "changed",
    "resume",
    # util
    "clog2",
]
